// <auto-generated />
using Ejer2API_AlejandroSerafinParedes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ejer2API_AlejandroSerafinParedes.Migrations
{
    [DbContext(typeof(Ejer2API_AlejandroSerafinParedesContext))]
    partial class Ejer2API_AlejandroSerafinParedesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ejer2API_AlejandroSerafinParedes.Models.Game", b =>
                {
                    b.Property<int>("gameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gameId"));

                    b.Property<string>("gameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genreId")
                        .HasColumnType("int");

                    b.HasKey("gameId");

                    b.HasIndex("genreId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            gameId = 1,
                            gameName = "El señor de los ajillos",
                            genreId = 1
                        },
                        new
                        {
                            gameId = 2,
                            gameName = "Estreet Nocilla",
                            genreId = 1
                        },
                        new
                        {
                            gameId = 3,
                            gameName = "Blancanieves y los 7 guanches",
                            genreId = 1
                        });
                });

            modelBuilder.Entity("Ejer2API_AlejandroSerafinParedes.Models.Genre", b =>
                {
                    b.Property<int>("genreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genreId"));

                    b.Property<string>("genreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            genreId = 1,
                            genreName = "Lucha"
                        },
                        new
                        {
                            genreId = 2,
                            genreName = "Acción"
                        },
                        new
                        {
                            genreId = 3,
                            genreName = "Shooter"
                        });
                });

            modelBuilder.Entity("Ejer2API_AlejandroSerafinParedes.Models.Game", b =>
                {
                    b.HasOne("Ejer2API_AlejandroSerafinParedes.Models.Genre", "Genre")
                        .WithMany("games")
                        .HasForeignKey("genreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Ejer2API_AlejandroSerafinParedes.Models.Genre", b =>
                {
                    b.Navigation("games");
                });
#pragma warning restore 612, 618
        }
    }
}
